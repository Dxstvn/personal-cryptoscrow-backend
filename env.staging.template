# ================================
# STAGING ENVIRONMENT CONFIGURATION
# ================================
# This file contains staging environment variables for CryptoEscrow backend
# Used for testing and staging deployments before production
# 
# INSTRUCTIONS: Copy this file to .env.staging and use for staging deployment

# Environment Settings
NODE_ENV=staging
USE_AWS_SECRETS=true
AWS_REGION=us-east-1

# Server Configuration
PORT=5173
FRONTEND_URL=https://staging.clearhold.app

# ================================
# FIREBASE CONFIGURATION (STAGING)
# ================================
# Staging Firebase project: escrowstaging
FIREBASE_PROJECT_ID=escrowstaging
FIREBASE_STORAGE_BUCKET=escrowstaging.appspot.com
FIREBASE_API_KEY=AIzaSyAEnTHpQpcgzWvDfiusF90-beSGCz5pva8
FIREBASE_AUTH_DOMAIN=escrowstaging.firebaseapp.com
FIREBASE_MESSAGING_SENDER_ID=960491714548
FIREBASE_APP_ID=1:960491714548:web:f1b418ffaddd0ba2cc2ba
FIREBASE_MEASUREMENT_ID=G-07NYQBYP9N

# Firebase Admin SDK (managed via AWS Secrets in staging)
# GOOGLE_APPLICATION_CREDENTIALS will be set via AWS Secrets Manager

# ================================
# BLOCKCHAIN CONFIGURATION (TESTNET)
# ================================
# Using Sepolia testnet for safe staging testing
CHAIN_ID=11155111
RPC_URL=https://sepolia.infura.io/v3/4af9a8307a914da58937e8da53c602f9
SEPOLIA_RPC_URL=https://sepolia.infura.io/v3/4af9a8307a914da58937e8da53c602f9

# Blockchain credentials managed via AWS Secrets Manager
# DEPLOYER_PRIVATE_KEY - Retrieved from AWS Secrets
# BACKEND_WALLET_PRIVATE_KEY - Retrieved from AWS Secrets
# INFURA_API_KEY - Retrieved from AWS Secrets
# ALCHEMY_API_KEY - Retrieved from AWS Secrets

# ================================
# ADMIN & SECURITY CONFIGURATION
# ================================
# Allowed admin emails for staging environment
ALLOWED_EMAILS=jasmindustin@gmail.com,dustin.jasmin@jaspire.co,andyrowe00@gmail.com

# Security credentials managed via AWS Secrets Manager
# JWT_SECRET - Retrieved from AWS Secrets
# ENCRYPTION_KEY - Retrieved from AWS Secrets
# DATABASE_ENCRYPTION_KEY - Retrieved from AWS Secrets

# ================================
# SCHEDULED JOBS CONFIGURATION
# ================================
# More frequent deadline checks for testing (every 10 minutes)
CRON_SCHEDULE_DEADLINE_CHECKS=*/10 * * * *

# ================================
# EMAIL CONFIGURATION
# ================================
# Email settings managed via AWS Secrets Manager
# SMTP_HOST - Retrieved from AWS Secrets
# SMTP_PORT - Retrieved from AWS Secrets
# SMTP_USER - Retrieved from AWS Secrets
# SMTP_PASS - Retrieved from AWS Secrets

# ================================
# TESTING CONFIGURATION
# ================================
# Test user accounts for staging (for automated testing)
TEST_USER_A_EMAIL=staging.testuser.a@example.com
TEST_USER_A_PASSWORD=StagingTestPass123!
TEST_USER_B_EMAIL=staging.testuser.b@example.com
TEST_USER_B_PASSWORD=StagingTestPass456!

# ================================
# CORS CONFIGURATION
# ================================
# Allowed origins for staging environment
CORS_ORIGINS=https://staging.clearhold.app,http://localhost:3000,http://localhost:3001

# ================================
# LOGGING CONFIGURATION
# ================================
# Debug logging enabled for staging
DEBUG=cryptoescrow:*
LOG_LEVEL=debug

# ================================
# RATE LIMITING CONFIGURATION
# ================================
# Staging rate limits (more permissive for testing)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=200
AUTH_RATE_LIMIT_MAX=10

# ================================
# MONITORING CONFIGURATION
# ================================
# Health check and monitoring settings
HEALTH_CHECK_ENABLED=true
METRICS_COLLECTION_ENABLED=true
PERFORMANCE_MONITORING=true

# ================================
# FILE UPLOAD CONFIGURATION
# ================================
# File upload limits for staging
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=pdf,jpg,jpeg,png,doc,docx
MAX_FILES_PER_DEAL=20

# ================================
# BLOCKCHAIN NETWORK CONFIGURATION
# ================================
# Supported networks in staging
SUPPORTED_NETWORKS=ethereum,polygon,bsc,solana,bitcoin
PRIMARY_NETWORK=ethereum
TESTNET_MODE=true

# ================================
# CROSS-CHAIN CONFIGURATION
# ================================
# Cross-chain bridge settings for staging
BRIDGE_PROVIDERS=layerzero,wormhole
CROSS_CHAIN_ENABLED=true
BRIDGE_TIMEOUT_MS=300000

# ================================
# DATABASE CONFIGURATION
# ================================
# Firestore settings for staging
FIRESTORE_TIMEOUT_MS=10000
FIRESTORE_RETRY_ATTEMPTS=3
FIRESTORE_CACHE_SIZE=40000000

# ================================
# FRONTEND INTEGRATION NOTES
# ================================
# For frontend developers using this staging environment:
# 
# 1. API Base URL: https://staging-api.clearhold.app
# 2. Firebase Project: escrowstaging
# 3. Blockchain Network: Sepolia Testnet (Chain ID: 11155111)
# 4. Test Tokens: Use Sepolia testnet ETH (free from faucets)
# 5. Real-time Updates: All data changes via Firestore listeners
# 6. File Uploads: Max 10MB per file, 20 files per deal
# 7. Rate Limits: 200 requests per 15 minutes (more permissive than production)
# 
# Frontend .env variables should include:
# NEXT_PUBLIC_API_URL=https://staging-api.clearhold.app
# NEXT_PUBLIC_ENVIRONMENT=staging
# NEXT_PUBLIC_BLOCKCHAIN_NETWORK=sepolia
# 
# And all Firebase configuration variables from this file

# ================================
# SETUP INSTRUCTIONS
# ================================
# 1. Copy this file: cp env.staging.template .env.staging
# 2. Ensure AWS credentials are configured for secrets access
# 3. Start staging server: npm run start:staging
# 4. Verify health check: curl https://staging-api.clearhold.app/health 