{"version":3,"names":["SecretsManagerClient","GetSecretValueCommand","AWSSecretsManager","constructor","client","region","process","env","AWS_REGION","cache","Map","cacheTimeout","getSecret","secretName","cached","get","Date","now","timestamp","data","command","SecretId","response","send","secretValue","JSON","parse","SecretString","set","error","console","message","Error","getAppSecrets","getBlockchainSecrets","getFirebaseServiceAccount","serviceAccount","private_key","replace","clearCache","clear","isAWSEnvironment","NODE_ENV","USE_AWS_SECRETS"],"sources":["awsSecretsManager.js"],"sourcesContent":["import { SecretsManagerClient, GetSecretValueCommand } from '@aws-sdk/client-secrets-manager';\n\nclass AWSSecretsManager {\n  constructor() {\n    this.client = new SecretsManagerClient({\n      region: process.env.AWS_REGION || 'us-east-1'\n    });\n    this.cache = new Map();\n    this.cacheTimeout = 5 * 60 * 1000; // 5 minutes cache\n  }\n\n  async getSecret(secretName) {\n    // Check cache first\n    const cached = this.cache.get(secretName);\n    if (cached && Date.now() - cached.timestamp < this.cacheTimeout) {\n      return cached.data;\n    }\n\n    try {\n      const command = new GetSecretValueCommand({\n        SecretId: secretName,\n      });\n\n      const response = await this.client.send(command);\n      const secretValue = JSON.parse(response.SecretString);\n\n      // Cache the result\n      this.cache.set(secretName, {\n        data: secretValue,\n        timestamp: Date.now()\n      });\n\n      return secretValue;\n    } catch (error) {\n      console.error(`Failed to retrieve secret ${secretName}:`, error.message);\n      throw new Error(`AWS Secrets Manager error: ${error.message}`);\n    }\n  }\n\n  async getAppSecrets() {\n    return await this.getSecret('CryptoEscrow/App/Config');\n  }\n\n  async getBlockchainSecrets() {\n    return await this.getSecret('CryptoEscrow/Blockchain/Keys');\n  }\n\n  async getFirebaseServiceAccount() {\n    const serviceAccount = await this.getSecret('CryptoEscrow/Firebase/ServiceAccount');\n    \n    // Fix the private key formatting - unescape the newlines\n    if (serviceAccount && serviceAccount.private_key) {\n      serviceAccount.private_key = serviceAccount.private_key.replace(/\\\\n/g, '\\n');\n    }\n    \n    return serviceAccount;\n  }\n\n  // Method to clear cache (useful for testing or forced refresh)\n  clearCache() {\n    this.cache.clear();\n  }\n\n  // Method to check if running in AWS environment\n  isAWSEnvironment() {\n    return process.env.NODE_ENV === 'production' || process.env.USE_AWS_SECRETS === 'true';\n  }\n}\n\nexport default new AWSSecretsManager(); "],"mappings":"AAAA,SAASA,oBAAoB,EAAEC,qBAAqB,QAAQ,iCAAiC;AAE7F,MAAMC,iBAAiB,CAAC;EACtBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAIJ,oBAAoB,CAAC;MACrCK,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,IAAI;IACpC,CAAC,CAAC;IACF,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB,IAAI,CAACC,YAAY,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;EACrC;EAEA,MAAMC,SAASA,CAACC,UAAU,EAAE;IAC1B;IACA,MAAMC,MAAM,GAAG,IAAI,CAACL,KAAK,CAACM,GAAG,CAACF,UAAU,CAAC;IACzC,IAAIC,MAAM,IAAIE,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGH,MAAM,CAACI,SAAS,GAAG,IAAI,CAACP,YAAY,EAAE;MAC/D,OAAOG,MAAM,CAACK,IAAI;IACpB;IAEA,IAAI;MACF,MAAMC,OAAO,GAAG,IAAInB,qBAAqB,CAAC;QACxCoB,QAAQ,EAAER;MACZ,CAAC,CAAC;MAEF,MAAMS,QAAQ,GAAG,MAAM,IAAI,CAAClB,MAAM,CAACmB,IAAI,CAACH,OAAO,CAAC;MAChD,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAACK,YAAY,CAAC;;MAErD;MACA,IAAI,CAAClB,KAAK,CAACmB,GAAG,CAACf,UAAU,EAAE;QACzBM,IAAI,EAAEK,WAAW;QACjBN,SAAS,EAAEF,IAAI,CAACC,GAAG,CAAC;MACtB,CAAC,CAAC;MAEF,OAAOO,WAAW;IACpB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6BhB,UAAU,GAAG,EAAEgB,KAAK,CAACE,OAAO,CAAC;MACxE,MAAM,IAAIC,KAAK,CAAC,8BAA8BH,KAAK,CAACE,OAAO,EAAE,CAAC;IAChE;EACF;EAEA,MAAME,aAAaA,CAAA,EAAG;IACpB,OAAO,MAAM,IAAI,CAACrB,SAAS,CAAC,yBAAyB,CAAC;EACxD;EAEA,MAAMsB,oBAAoBA,CAAA,EAAG;IAC3B,OAAO,MAAM,IAAI,CAACtB,SAAS,CAAC,8BAA8B,CAAC;EAC7D;EAEA,MAAMuB,yBAAyBA,CAAA,EAAG;IAChC,MAAMC,cAAc,GAAG,MAAM,IAAI,CAACxB,SAAS,CAAC,sCAAsC,CAAC;;IAEnF;IACA,IAAIwB,cAAc,IAAIA,cAAc,CAACC,WAAW,EAAE;MAChDD,cAAc,CAACC,WAAW,GAAGD,cAAc,CAACC,WAAW,CAACC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;IAC/E;IAEA,OAAOF,cAAc;EACvB;;EAEA;EACAG,UAAUA,CAAA,EAAG;IACX,IAAI,CAAC9B,KAAK,CAAC+B,KAAK,CAAC,CAAC;EACpB;;EAEA;EACAC,gBAAgBA,CAAA,EAAG;IACjB,OAAOnC,OAAO,CAACC,GAAG,CAACmC,QAAQ,KAAK,YAAY,IAAIpC,OAAO,CAACC,GAAG,CAACoC,eAAe,KAAK,MAAM;EACxF;AACF;AAEA,eAAe,IAAIzC,iBAAiB,CAAC,CAAC","ignoreList":[]}