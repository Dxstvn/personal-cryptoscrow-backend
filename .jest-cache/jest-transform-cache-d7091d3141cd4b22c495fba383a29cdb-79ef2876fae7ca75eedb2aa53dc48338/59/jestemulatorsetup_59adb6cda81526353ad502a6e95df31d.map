{"version":3,"names":["initializeApp","getAuth","connectAuthEmulator","initializeAdminApp","getAdminAuth","getFirestore","getAdminFirestore","PROJECT_ID","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","adminApp","auth","disableWarnings","adminAuth","adminFirestore","settings","host","ssl","FIREBASE_AUTH_EMULATOR_HOST","FIRESTORE_EMULATOR_HOST","FIREBASE_STORAGE_EMULATOR_HOST","console","log"],"sources":["jest.emulator.setup.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { initializeApp as initializeAdminApp } from 'firebase-admin/app';\nimport { getAuth as getAdminAuth } from 'firebase-admin/auth';\nimport { getFirestore as getAdminFirestore } from 'firebase-admin/firestore';\n\n// Common project ID for both client and admin SDKs\nconst PROJECT_ID = \"demo-test\";\n\n// Firebase configuration for emulator - API key can be anything when using emulator\nconst firebaseConfig = {\n  apiKey: \"demo-api-key\",\n  authDomain: \"localhost\",\n  projectId: PROJECT_ID,\n  storageBucket: `${PROJECT_ID}.appspot.com`,\n  messagingSenderId: \"123456789\",\n  appId: \"1:123456789:web:abcdef\"\n};\n\n// Initialize Firebase app\nconst app = initializeApp(firebaseConfig, \"testApp\");\n\n// Initialize Firebase Admin app with the same project ID\n// For testing, we don't need credentials\nconst adminApp = initializeAdminApp({\n  projectId: PROJECT_ID,\n  storageBucket: `${PROJECT_ID}.appspot.com`\n}, \"adminTestApp\");\n\n// Connect client SDK to auth emulator\nconst auth = getAuth(app);\nconnectAuthEmulator(auth, \"http://localhost:9099\", { disableWarnings: false });\n\n// Get Admin Auth instance - now safe to call after admin app initialization\nconst adminAuth = getAdminAuth(adminApp);\nconst adminFirestore = getAdminFirestore(adminApp);\nadminFirestore.settings({\n  host: 'localhost:5004',\n  ssl: false,\n});\nconst FIREBASE_AUTH_EMULATOR_HOST=\"localhost:9099\"\nconst FIRESTORE_EMULATOR_HOST=\"localhost:5004\"\nconst FIREBASE_STORAGE_EMULATOR_HOST=\"localhost:9199\"\n// Log environment for debugging\nconsole.log(`Auth Emulator Host: ${FIREBASE_AUTH_EMULATOR_HOST}`);\nconsole.log(`Firestore Emulator Host: ${FIRESTORE_EMULATOR_HOST}`);\nconsole.log(`Storage Emulator Host: ${FIREBASE_STORAGE_EMULATOR_HOST}`);\nconsole.log(`Test Project ID: ${PROJECT_ID}`);\n\n\n// Export initialized services\nexport {\n  auth,\n  adminAuth,\n  adminFirestore,\n  PROJECT_ID,\n  adminApp\n};"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,mBAAmB,QAAQ,eAAe;AAC5D,SAASF,aAAa,IAAIG,kBAAkB,QAAQ,oBAAoB;AACxE,SAASF,OAAO,IAAIG,YAAY,QAAQ,qBAAqB;AAC7D,SAASC,YAAY,IAAIC,iBAAiB,QAAQ,0BAA0B;;AAE5E;AACA,MAAMC,UAAU,GAAG,WAAW;;AAE9B;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,cAAc;EACtBC,UAAU,EAAE,WAAW;EACvBC,SAAS,EAAEJ,UAAU;EACrBK,aAAa,EAAE,GAAGL,UAAU,cAAc;EAC1CM,iBAAiB,EAAE,WAAW;EAC9BC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGf,aAAa,CAACQ,cAAc,EAAE,SAAS,CAAC;;AAEpD;AACA;AACA,MAAMQ,QAAQ,GAAGb,kBAAkB,CAAC;EAClCQ,SAAS,EAAEJ,UAAU;EACrBK,aAAa,EAAE,GAAGL,UAAU;AAC9B,CAAC,EAAE,cAAc,CAAC;;AAElB;AACA,MAAMU,IAAI,GAAGhB,OAAO,CAACc,GAAG,CAAC;AACzBb,mBAAmB,CAACe,IAAI,EAAE,uBAAuB,EAAE;EAAEC,eAAe,EAAE;AAAM,CAAC,CAAC;;AAE9E;AACA,MAAMC,SAAS,GAAGf,YAAY,CAACY,QAAQ,CAAC;AACxC,MAAMI,cAAc,GAAGd,iBAAiB,CAACU,QAAQ,CAAC;AAClDI,cAAc,CAACC,QAAQ,CAAC;EACtBC,IAAI,EAAE,gBAAgB;EACtBC,GAAG,EAAE;AACP,CAAC,CAAC;AACF,MAAMC,2BAA2B,GAAC,gBAAgB;AAClD,MAAMC,uBAAuB,GAAC,gBAAgB;AAC9C,MAAMC,8BAA8B,GAAC,gBAAgB;AACrD;AACAC,OAAO,CAACC,GAAG,CAAC,uBAAuBJ,2BAA2B,EAAE,CAAC;AACjEG,OAAO,CAACC,GAAG,CAAC,4BAA4BH,uBAAuB,EAAE,CAAC;AAClEE,OAAO,CAACC,GAAG,CAAC,0BAA0BF,8BAA8B,EAAE,CAAC;AACvEC,OAAO,CAACC,GAAG,CAAC,oBAAoBrB,UAAU,EAAE,CAAC;;AAG7C;AACA,SACEU,IAAI,EACJE,SAAS,EACTC,cAAc,EACdb,UAAU,EACVS,QAAQ","ignoreList":[]}