29d6fdfafe08681a5d9ae775f2cc60ee
// jest.production.setup.js - Lightweight setup for production readiness tests

// Set test environment variables
process.env.NODE_ENV = 'test';
process.env.FIREBASE_PROJECT_ID = 'demo-test';
process.env.FIREBASE_STORAGE_BUCKET = 'demo-test.appspot.com';

// Set emulator hosts for integration tests (only if needed)
if (!process.env.FIREBASE_AUTH_EMULATOR_HOST) {
  process.env.FIREBASE_AUTH_EMULATOR_HOST = 'localhost:9099';
}
if (!process.env.FIRESTORE_EMULATOR_HOST) {
  process.env.FIRESTORE_EMULATOR_HOST = 'localhost:5004';
}
if (!process.env.FIREBASE_STORAGE_EMULATOR_HOST) {
  process.env.FIREBASE_STORAGE_EMULATOR_HOST = 'localhost:9199';
}

// Set test credentials (safe values for testing)
process.env.JWT_SECRET = 'test-jwt-secret-for-production-validation';
process.env.ENCRYPTION_KEY = 'test-encryption-key-32-chars-long';
process.env.DATABASE_ENCRYPTION_KEY = 'test-db-encryption-key-32-chars';

// Blockchain test configuration (no actual blockchain needed for most tests)
process.env.RPC_URL = 'http://localhost:8545';
process.env.CHAIN_ID = '31337';
process.env.DEPLOYER_PRIVATE_KEY = '0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80';
process.env.BACKEND_WALLET_PRIVATE_KEY = '0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d';

// Email test configuration
process.env.SMTP_HOST = 'test.smtp.com';
process.env.SMTP_PORT = '587';
process.env.SMTP_USER = 'test@example.com';
process.env.SMTP_PASS = 'testpassword';

// API test configuration
process.env.ALLOWED_EMAILS = 'test@example.com,admin@example.com';
process.env.FRONTEND_URL = 'http://localhost:3000';

// Increase timeout for async operations
// Note: jest.setTimeout() may not be available in all Jest setups
if (typeof jest !== 'undefined' && jest.setTimeout) {
  jest.setTimeout(30000);
}

// Global test utilities
global.testTimeout = ms => new Promise(resolve => setTimeout(resolve, ms));

// Suppress console warnings in tests for cleaner output
const originalWarn = console.warn;
console.warn = (...args) => {
  const message = args[0];
  // Suppress known warnings that don't affect functionality
  if (typeof message === 'string' && (message.includes('ExperimentalWarning') || message.includes('experimental') || message.includes('deprecated'))) {
    return;
  }
  originalWarn.apply(console, args);
};
console.log('ðŸ§ª Production test environment configured');
console.log(`ðŸ“‹ Running in: ${process.env.NODE_ENV} mode`);
console.log(`ðŸ”§ Firebase Project: ${process.env.FIREBASE_PROJECT_ID}`);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJGSVJFQkFTRV9QUk9KRUNUX0lEIiwiRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQiLCJGSVJFQkFTRV9BVVRIX0VNVUxBVE9SX0hPU1QiLCJGSVJFU1RPUkVfRU1VTEFUT1JfSE9TVCIsIkZJUkVCQVNFX1NUT1JBR0VfRU1VTEFUT1JfSE9TVCIsIkpXVF9TRUNSRVQiLCJFTkNSWVBUSU9OX0tFWSIsIkRBVEFCQVNFX0VOQ1JZUFRJT05fS0VZIiwiUlBDX1VSTCIsIkNIQUlOX0lEIiwiREVQTE9ZRVJfUFJJVkFURV9LRVkiLCJCQUNLRU5EX1dBTExFVF9QUklWQVRFX0tFWSIsIlNNVFBfSE9TVCIsIlNNVFBfUE9SVCIsIlNNVFBfVVNFUiIsIlNNVFBfUEFTUyIsIkFMTE9XRURfRU1BSUxTIiwiRlJPTlRFTkRfVVJMIiwiamVzdCIsInNldFRpbWVvdXQiLCJnbG9iYWwiLCJ0ZXN0VGltZW91dCIsIm1zIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvcmlnaW5hbFdhcm4iLCJjb25zb2xlIiwid2FybiIsImFyZ3MiLCJtZXNzYWdlIiwiaW5jbHVkZXMiLCJhcHBseSIsImxvZyJdLCJzb3VyY2VzIjpbImplc3QucHJvZHVjdGlvbi5zZXR1cC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBqZXN0LnByb2R1Y3Rpb24uc2V0dXAuanMgLSBMaWdodHdlaWdodCBzZXR1cCBmb3IgcHJvZHVjdGlvbiByZWFkaW5lc3MgdGVzdHNcblxuLy8gU2V0IHRlc3QgZW52aXJvbm1lbnQgdmFyaWFibGVzXG5wcm9jZXNzLmVudi5OT0RFX0VOViA9ICd0ZXN0JztcbnByb2Nlc3MuZW52LkZJUkVCQVNFX1BST0pFQ1RfSUQgPSAnZGVtby10ZXN0JztcbnByb2Nlc3MuZW52LkZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUID0gJ2RlbW8tdGVzdC5hcHBzcG90LmNvbSc7XG5cbi8vIFNldCBlbXVsYXRvciBob3N0cyBmb3IgaW50ZWdyYXRpb24gdGVzdHMgKG9ubHkgaWYgbmVlZGVkKVxuaWYgKCFwcm9jZXNzLmVudi5GSVJFQkFTRV9BVVRIX0VNVUxBVE9SX0hPU1QpIHtcbiAgcHJvY2Vzcy5lbnYuRklSRUJBU0VfQVVUSF9FTVVMQVRPUl9IT1NUID0gJ2xvY2FsaG9zdDo5MDk5Jztcbn1cbmlmICghcHJvY2Vzcy5lbnYuRklSRVNUT1JFX0VNVUxBVE9SX0hPU1QpIHtcbiAgcHJvY2Vzcy5lbnYuRklSRVNUT1JFX0VNVUxBVE9SX0hPU1QgPSAnbG9jYWxob3N0OjUwMDQnO1xufVxuaWYgKCFwcm9jZXNzLmVudi5GSVJFQkFTRV9TVE9SQUdFX0VNVUxBVE9SX0hPU1QpIHtcbiAgcHJvY2Vzcy5lbnYuRklSRUJBU0VfU1RPUkFHRV9FTVVMQVRPUl9IT1NUID0gJ2xvY2FsaG9zdDo5MTk5Jztcbn1cblxuLy8gU2V0IHRlc3QgY3JlZGVudGlhbHMgKHNhZmUgdmFsdWVzIGZvciB0ZXN0aW5nKVxucHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCA9ICd0ZXN0LWp3dC1zZWNyZXQtZm9yLXByb2R1Y3Rpb24tdmFsaWRhdGlvbic7XG5wcm9jZXNzLmVudi5FTkNSWVBUSU9OX0tFWSA9ICd0ZXN0LWVuY3J5cHRpb24ta2V5LTMyLWNoYXJzLWxvbmcnO1xucHJvY2Vzcy5lbnYuREFUQUJBU0VfRU5DUllQVElPTl9LRVkgPSAndGVzdC1kYi1lbmNyeXB0aW9uLWtleS0zMi1jaGFycyc7XG5cbi8vIEJsb2NrY2hhaW4gdGVzdCBjb25maWd1cmF0aW9uIChubyBhY3R1YWwgYmxvY2tjaGFpbiBuZWVkZWQgZm9yIG1vc3QgdGVzdHMpXG5wcm9jZXNzLmVudi5SUENfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6ODU0NSc7XG5wcm9jZXNzLmVudi5DSEFJTl9JRCA9ICczMTMzNyc7XG5wcm9jZXNzLmVudi5ERVBMT1lFUl9QUklWQVRFX0tFWSA9ICcweGFjMDk3NGJlYzM5YTE3ZTM2YmE0YTZiNGQyMzhmZjk0NGJhY2I0NzhjYmVkNWVmY2FlNzg0ZDdiZjRmMmZmODAnO1xucHJvY2Vzcy5lbnYuQkFDS0VORF9XQUxMRVRfUFJJVkFURV9LRVkgPSAnMHg1OWM2OTk1ZTk5OGY5N2E1YTAwNDQ5NjZmMDk0NTM4OWRjOWU4NmRhZTg4YzdhODQxMmY0NjAzYjZiNzg2OTBkJztcblxuLy8gRW1haWwgdGVzdCBjb25maWd1cmF0aW9uXG5wcm9jZXNzLmVudi5TTVRQX0hPU1QgPSAndGVzdC5zbXRwLmNvbSc7XG5wcm9jZXNzLmVudi5TTVRQX1BPUlQgPSAnNTg3JztcbnByb2Nlc3MuZW52LlNNVFBfVVNFUiA9ICd0ZXN0QGV4YW1wbGUuY29tJztcbnByb2Nlc3MuZW52LlNNVFBfUEFTUyA9ICd0ZXN0cGFzc3dvcmQnO1xuXG4vLyBBUEkgdGVzdCBjb25maWd1cmF0aW9uXG5wcm9jZXNzLmVudi5BTExPV0VEX0VNQUlMUyA9ICd0ZXN0QGV4YW1wbGUuY29tLGFkbWluQGV4YW1wbGUuY29tJztcbnByb2Nlc3MuZW52LkZST05URU5EX1VSTCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAnO1xuXG4vLyBJbmNyZWFzZSB0aW1lb3V0IGZvciBhc3luYyBvcGVyYXRpb25zXG4vLyBOb3RlOiBqZXN0LnNldFRpbWVvdXQoKSBtYXkgbm90IGJlIGF2YWlsYWJsZSBpbiBhbGwgSmVzdCBzZXR1cHNcbmlmICh0eXBlb2YgamVzdCAhPT0gJ3VuZGVmaW5lZCcgJiYgamVzdC5zZXRUaW1lb3V0KSB7XG4gIGplc3Quc2V0VGltZW91dCgzMDAwMCk7XG59XG5cbi8vIEdsb2JhbCB0ZXN0IHV0aWxpdGllc1xuZ2xvYmFsLnRlc3RUaW1lb3V0ID0gKG1zKSA9PiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcblxuLy8gU3VwcHJlc3MgY29uc29sZSB3YXJuaW5ncyBpbiB0ZXN0cyBmb3IgY2xlYW5lciBvdXRwdXRcbmNvbnN0IG9yaWdpbmFsV2FybiA9IGNvbnNvbGUud2FybjtcbmNvbnNvbGUud2FybiA9ICguLi5hcmdzKSA9PiB7XG4gIGNvbnN0IG1lc3NhZ2UgPSBhcmdzWzBdO1xuICAvLyBTdXBwcmVzcyBrbm93biB3YXJuaW5ncyB0aGF0IGRvbid0IGFmZmVjdCBmdW5jdGlvbmFsaXR5XG4gIGlmICh0eXBlb2YgbWVzc2FnZSA9PT0gJ3N0cmluZycgJiYgKFxuICAgIG1lc3NhZ2UuaW5jbHVkZXMoJ0V4cGVyaW1lbnRhbFdhcm5pbmcnKSB8fFxuICAgIG1lc3NhZ2UuaW5jbHVkZXMoJ2V4cGVyaW1lbnRhbCcpIHx8XG4gICAgbWVzc2FnZS5pbmNsdWRlcygnZGVwcmVjYXRlZCcpXG4gICkpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgb3JpZ2luYWxXYXJuLmFwcGx5KGNvbnNvbGUsIGFyZ3MpO1xufTtcblxuY29uc29sZS5sb2coJ/Cfp6ogUHJvZHVjdGlvbiB0ZXN0IGVudmlyb25tZW50IGNvbmZpZ3VyZWQnKTtcbmNvbnNvbGUubG9nKGDwn5OLIFJ1bm5pbmcgaW46ICR7cHJvY2Vzcy5lbnYuTk9ERV9FTlZ9IG1vZGVgKTtcbmNvbnNvbGUubG9nKGDwn5SnIEZpcmViYXNlIFByb2plY3Q6ICR7cHJvY2Vzcy5lbnYuRklSRUJBU0VfUFJPSkVDVF9JRH1gKTsgIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBQSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsUUFBUSxHQUFHLE1BQU07QUFDN0JGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRSxtQkFBbUIsR0FBRyxXQUFXO0FBQzdDSCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0csdUJBQXVCLEdBQUcsdUJBQXVCOztBQUU3RDtBQUNBLElBQUksQ0FBQ0osT0FBTyxDQUFDQyxHQUFHLENBQUNJLDJCQUEyQixFQUFFO0VBQzVDTCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0ksMkJBQTJCLEdBQUcsZ0JBQWdCO0FBQzVEO0FBQ0EsSUFBSSxDQUFDTCxPQUFPLENBQUNDLEdBQUcsQ0FBQ0ssdUJBQXVCLEVBQUU7RUFDeENOLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSyx1QkFBdUIsR0FBRyxnQkFBZ0I7QUFDeEQ7QUFDQSxJQUFJLENBQUNOLE9B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